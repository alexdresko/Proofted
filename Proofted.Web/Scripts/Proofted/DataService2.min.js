define(["require","exports","Breeze","Logger2"],function(n,t,i,r){(function(n){var f=i,t,u;f,t=r,u=function(){function n(){this.serviceName="breeze/startapi",this.manager=new breeze.EntityManager(this.serviceName)}return n.prototype.getAllOrganizations=function(){var n=breeze.EntityQuery.from("Organizations").orderBy("Name").expand("Invitations, Users, Projects");return this.manager.executeQuery(n)},n.prototype.createOrganization=function(){return this.manager.createEntity("Organization")},n.prototype.createInvitation=function(n){return this.manager.createEntity("Invitation",n)},n.prototype.createProject=function(){return this.manager.createEntity("Project")},n.prototype.saveChanges=function(){this.manager.hasChanges()?this.manager.saveChanges().then(this.saveSucceeded).fail(this.saveFailed):t.Proofted.Logger.info("Nothing to save")},n.prototype.saveSucceeded=function(n){t.Proofted.Logger.success("# of Organizations saved = "+n.entities.length),t.Proofted.Logger.log(n)},n.prototype.saveFailed=function(n){var i=n.message,r=n.detail;if(i==="Validation error"){this.handleSaveValidationError(n);return}r&&r.ExceptionType.indexOf("OptimisticConcurrencyException")!==-1&&(i="Another user, perhaps the server, may have deleted one or all of the todos.",this.manager.rejectChanges()),t.Proofted.Logger.error(n,"Failed to save changes. "+i+" You may have to restart the app.")},n.prototype.handleSaveValidationError=function(n){var i="Not saved due to validation error",r;try{r=n.entitiesWithErrors[0].entityAspect.getValidationErrors()[0],i+=": "+r.errorMessage}catch(u){}t.Proofted.Logger.error(i)},n}(),n.DataService=u})(t.Proofted||(t.Proofted={}));var u=t.Proofted})