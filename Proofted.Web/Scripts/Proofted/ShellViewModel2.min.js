define(["require","exports","Logger2","DataService2"],function(n,t,i,r){var u=i,f=r,e;(function(n){var t=function(){function n(){var n=this;this.dataservice=new f.Proofted.DataService,this.organizations=ko.observableArray([]),this.editingOrganization=ko.observable(!1),this.organizationNameInput=ko.observable(""),this.rendered=ko.observable(!1),this.handleItemErrors=function(n){var t,i;if(n){if(t=n.entityAspect.getValidationErrors(),t.length==0){u.Proofted.Logger.info("No errors for current item");return}i=n.entityAspect.getValidationErrors()[0],u.Proofted.Logger.error(i.errorMessage),n.entityAspect.rejectChanges()}},this.finishRender=function(){n.rendered(!0)},this.querySucceeded=function(t){n.organizations([]),t.results.forEach(function(t){n.extendOrganization(t),n.organizations.push(t)}),u.Proofted.Logger.info("Fetched Orgs ")}}return n.prototype.newOrganizationClick=function(){this.editingOrganization(!0)},n.prototype.organizationSubmit=function(){this.editingOrganization(!1);var n=this.dataservice.createOrganization();n.Name(this.organizationNameInput()),n.entityAspect.validateEntity()?(this.extendOrganization(n),this.organizations.push(n),this.dataservice.saveChanges(),this.organizationNameInput("")):this.handleItemErrors(n)},n.prototype.cancelOrganizationForm=function(){this.editingOrganization(!1)},n.prototype.extendInvitation=function(n){n.destroy=function(){n.Organization().Invitations.remove(n),n.entityAspect.setDeleted()}},n.prototype.extendOrganization=function(n){var t=this;n.addUserClick=function(){if(n.invitationErrors().length==0){n.invitingUser(!1);var i=t.dataservice.createInvitation({EmailAddress:n.emailAddressInput()});i.entityAspect.validateEntity()&&(t.extendInvitation(i),n.Invitations.push(i),t.dataservice.saveChanges())}else n.invitationErrors.showAllMessages()},n.addProjectClick=function(){n.creatingProject(!1);var i=t.dataservice.createProject();i.Name(n.projectNameInput()),i.entityAspect.validateEntity()&&(n.extendProject(i),n.Projects.push(i),t.dataservice.saveChanges())},n.extendProject=function(){},n.destroy=function(){t.organizations.remove(n),n.entityAspect.setDeleted(),t.dataservice.saveChanges()},n.emailAddressInput=ko.observable("").extend({required:!0,email:!0}),n.invitationErrors=ko.validation.group(n,{deep:!1}),n.cancelUserInvite=function(){n.invitingUser(!1)},n.inviteUserClick=function(){n.invitingUser(!0)},n.invitingUser=ko.observable(!1),n.projectNameInput=ko.observable(""),n.creatingProject=ko.observable(!1),n.createProjectClick=function(){n.creatingProject(!0)},n.cancelCreatingProject=function(){n.creatingProject(!1)},$.each(n.Invitations(),function(n,i){t.extendInvitation(i)})},n.prototype.getAllOrganizations=function(){this.dataservice.getAllOrganizations().then(this.querySucceeded).fail(this.queryFailed)},n.prototype.queryFailed=function(n){u.Proofted.Logger.error(n,"Query failed")},n}();n.ShellViewModel=t})(t.Proofted||(t.Proofted={})),e=t.Proofted})